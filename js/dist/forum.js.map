{"version":3,"file":"forum.js","mappings":"MACA,IAAIA,EAAsB,CCA1BA,EAAyBC,IACxB,IAAIC,EAASD,GAAUA,EAAOE,WAC7B,IAAOF,EAAiB,QACxB,IAAM,EAEP,OADAD,EAAoBI,EAAEF,EAAQ,CAAEG,EAAGH,IAC5BA,CAAM,ECLdF,EAAwB,CAACM,EAASC,KACjC,IAAI,IAAIC,KAAOD,EACXP,EAAoBS,EAAEF,EAAYC,KAASR,EAAoBS,EAAEH,EAASE,IAC5EE,OAAOC,eAAeL,EAASE,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,IAE1E,ECNDR,EAAwB,CAACc,EAAKC,IAAUL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,GCClFf,EAAyBM,IACH,oBAAXa,QAA0BA,OAAOC,aAC1CV,OAAOC,eAAeL,EAASa,OAAOC,YAAa,CAAEC,MAAO,WAE7DX,OAAOC,eAAeL,EAAS,aAAc,CAAEe,OAAO,GAAO,G,+BCL9D,MAAM,EAA+BC,OAAOC,KAAKC,OAAO,a,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,iBCAlD,EAA+BF,OAAOC,KAAKC,OAAO,uC,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,yB,aCIxDC,IAAAA,aAAiBC,IAAI,oCAAoC,YCSvDC,EAAAA,EAAAA,QAAOC,IAAAA,UAA8B,aAAa,SAAoCC,GAAmC,IAAAC,EACnHD,EAAME,IAAI,SAASF,EAAMG,OAAO,QAEpC,IAAMC,EAAaC,KAAKC,MAAMF,WAGxBG,EAAa,SAACC,GAClB,OAAsB,IAAlBA,EAAIC,WAA6B,IAE9BD,EAAIE,UACb,EAEIC,EAAiB,MAAVP,OAAU,EAAVA,EAAYO,OAEf,OAARV,EAAIU,IAAAV,EAAMW,SACRD,EAAOA,EAAKE,MAAK,SAACrC,EAAGsC,GAAC,OAAKP,EAAW/B,GAAK+B,EAAWO,EAAE,IAAEC,KAAI,SAACC,GAAC,OAAKC,IAASD,EAAE,IAEhFhB,EAAMH,IACJ,OACCqB,EAAA,OAAKC,UAAU,uBAAuBR,IACtC,KAGP,GD9BF,G","sources":["webpack://@flarum-com/tags-under-discussion/webpack/bootstrap","webpack://@flarum-com/tags-under-discussion/webpack/runtime/compat get default export","webpack://@flarum-com/tags-under-discussion/webpack/runtime/define property getters","webpack://@flarum-com/tags-under-discussion/webpack/runtime/hasOwnProperty shorthand","webpack://@flarum-com/tags-under-discussion/webpack/runtime/make namespace object","webpack://@flarum-com/tags-under-discussion/external root \"flarum.core.compat['forum/app']\"","webpack://@flarum-com/tags-under-discussion/external root \"flarum.core.compat['common/extend']\"","webpack://@flarum-com/tags-under-discussion/external root \"flarum.core.compat['forum/components/DiscussionListItem']\"","webpack://@flarum-com/tags-under-discussion/external root \"flarum.core.compat['tags/helpers/tagLabel']\"","webpack://@flarum-com/tags-under-discussion/./src/forum/index.js","webpack://@flarum-com/tags-under-discussion/./src/forum/tagsUnderDiscussions.tsx"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/app'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/extend'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/DiscussionListItem'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['tags/helpers/tagLabel'];","import app from 'flarum/forum/app';\n\nimport tagsUnderDiscussions from './tagsUnderDiscussions';\n\napp.initializers.add('flarum-com/tags-under-discussion', () => {\n  tagsUnderDiscussions();\n});\n","import { extend } from 'flarum/common/extend';\nimport type ItemList from 'flarum/common/utils/ItemList';\nimport DiscussionListItem from 'flarum/forum/components/DiscussionListItem';\n\nimport tagLabel from 'flarum/tags/helpers/tagLabel';\n\nimport type Mithril from 'mithril';\nimport type Discussion from 'flarum/common/models/Discussion';\n\n/**\n * Only shows secondary tag labels on the DiscussionList.\n */\nexport default function onlySecondaryTagsOnDiscussionList() {\n  extend(DiscussionListItem.prototype, 'infoItems', function (this: DiscussionListItem, items: ItemList<Mithril.Children>) {\n    if (items.has('tags')) items.remove('tags');\n\n    const discussion = this.attrs.discussion as Discussion;\n\n    // enforce requested ordering of secondary then primary tags\n    const getSortVal = (tag) => {\n      if (tag.isChild() === false) return -10e6;\n\n      return tag.position();\n    };\n\n    let tags = discussion?.tags();\n\n    if (tags?.length) {\n      tags = tags.sort((a, b) => getSortVal(a) - getSortVal(b)).map((t) => tagLabel(t));\n\n      items.add(\n        'tags',\n        (<div className=\"TagsUnderDiscussion\">{tags}</div>),\n        -100\n      );\n    }\n  });\n}\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","flarum","core","compat","app","add","extend","DiscussionListItem","items","_tags","has","remove","discussion","this","attrs","getSortVal","tag","isChild","position","tags","length","sort","b","map","t","tagLabel","m","className"],"sourceRoot":""}